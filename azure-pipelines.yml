# Terraform to deploy Azure Resources
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
  
variables:
    isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
    location: 'uksouth'
    terraformVersion: 1.2.7
    terraformGroup: 'rg-terraform-pr'
    terraformStorageName: 'scopnatterraform'
    terraformStorageSku: 'Standard_LRS'
    terraformContainerName: 'infrastructure'
    tfFilesArtifactName: 'tf-files'
  
pool:
    vmImage: 'ubuntu-latest'
  
stages:
    - stage: 'Installation'
      jobs:
          - job: Setup
            steps:
             - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
               displayName: 'Install'
               inputs:
                 terraformVersion: '1.2.6'

    - stage: 'Init'
      jobs:
        - job: init
          steps:
            - task: CopyFiles@2
              inputs:
                Contents: '**'
                TargetFolder: '$(Build.ArtifactStagingDirectory)'
                displayName: 'Copy Artifacts'
            - task: PublishBuildArtifacts@1
              inputs: 
                pathToPublish: '$(Build.ArtifactStagingDirectory)'
                artifact: "devartifacts"
            - task: TerraformTaskV3@3
              displayName: 'Terraform init'
              inputs:
                 provider: azurerm
                 command: init
                 backendServiceArm: 'azure-devops'
                 backendAzureRmResourceGroupName: 'rg-terraform'
                 backendAzureRmStorageAccountName: 'scopnatterraform'
                 backendAzureRmContainerName: 'infrastructure'
                 backendAzureRmKey: 'terraform.tfstate'
            - task: TerraformTaskV3@3
              displayName: 'Terraform Validate'
              inputs:
                provider: 'azurerm'
                command: validate      

    - stage: 'Validate'
      jobs:
        - job: Validate
          steps:
            - task: TerraformTaskV3@3
              displayName: 'Terraform init'
              inputs:
                 provider: azurerm
                 command: init
                 backendServiceArm: 'azure-devops'
                 backendAzureRmResourceGroupName: 'rg-terraform'
                 backendAzureRmStorageAccountName: 'scopnatterraform'
                 backendAzureRmContainerName: 'infrastructure'
                 backendAzureRmKey: 'terraform.tfstate'
            - task: TerraformTaskV3@3
              displayName: 'Terraform Validate'
              inputs:
                provider: 'azurerm'
                command: validate
    
    - stage: 'Plan'
      jobs:
          - job: Plan
            steps:
            - task: TerraformTaskV3@3
              displayName: 'Terraform init'
              inputs:
                 provider: azurerm
                 command: init
                 backendServiceArm: 'azure-devops'
                 backendAzureRmResourceGroupName: 'rg-terraform'
                 backendAzureRmStorageAccountName: 'scopnatterraform'
                 backendAzureRmContainerName: 'infrastructure'
                 backendAzureRmKey: 'terraform.tfstate'
            - task: TerraformTaskV3@3
              displayName: 'Terraform Plan'
              inputs:
                 provider: 'azurerm'
                 command: plan
                 environmentServiceNameAzureRM: 'azure-devops'
                 #commandOptions: -input=false -var="objectid= $(TF_VAR_objectid)"

    - stage: ManualValidation
      jobs:
          - job: Manual_Validation
            pool: server
            steps:
            - task: ManualValidation@0
              timeoutInMinutes: 60
              displayName: 'Manual Approval for terraform plan'
              inputs:
               instructions: 'Please review the Terraform plan and approve or reject the deployment'

    - stage: 'Apply'
      jobs:
          - job: Apply
            steps:
            - task: TerraformTaskV3@3
              displayName: 'Terraform init'
              inputs:
                 provider: azurerm
                 command: init
                 backendServiceArm: 'azure-devops'
                 backendAzureRmResourceGroupName: 'rg-terraform'
                 backendAzureRmStorageAccountName: 'scopnatterraform'
                 backendAzureRmContainerName: 'infrastructure'
                 backendAzureRmKey: 'terraform.tfstate'
            - task: TerraformTaskV3@3
              displayName: 'Terraform Apply'
              inputs:
                 provider: 'azurerm'
                 command: apply
                 environmentServiceNameAzureRM: 'azure-devops'
                 
    - stage: ManualValidationDestroy
      jobs:
          - job: Manual_Validation
            pool: server
            steps:
            - task: ManualValidation@0
              timeoutInMinutes: 60
              displayName: 'Manual Approval for terraform destroy'
              inputs:
               instructions: 'Please review the Terraform apply and destroy'
    
    - stage: 'Destroy'
      jobs:
          - job: Destroy
            steps:
            - task: TerraformTaskV3@3
              displayName: 'Terraform init'
              inputs:
                 provider: azurerm
                 command: init
                 backendServiceArm: 'azure-devops'
                 backendAzureRmResourceGroupName: 'rg-terraform'
                 backendAzureRmStorageAccountName: 'scopnatterraform'
                 backendAzureRmContainerName: 'infrastructure'
                 backendAzureRmKey: 'terraform.tfstate'            
            - task: TerraformTaskV3@3
              displayName: 'Terraform Destroy'
              inputs:
                 provider: 'azurerm'
                 command: destroy
                 environmentServiceNameAzureRM: 'azure-devops'